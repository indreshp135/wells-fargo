version: '3.9'

services:

  pbefrontend:
    container_name: PBE-react-prod
    build:
      context: ./OPAReact
      dockerfile: Dockerfile
    ports:
      - '1337:80'

  fmfrontend:
    container_name: FM-react-prod
    build:
      context: ./FMReact
      dockerfile: Dockerfile
    ports:
      - '1338:80'

  pbebackend:
    container_name: PBE-django-prod
    build:
      context: ./OPABackend
      dockerfile: Dockerfile
    depends_on:
      - fm_db
    ports:
      - "8000:8000"
    env_file:
      - ./OPABackend/.env

  pbe_db:
    container_name: pbe_db
    image: postgres
    restart: unless-stopped
    env_file:
      - ./OPABackend/.env
    volumes:
      - "./OPABackend/db/postgres_data:/var/lib/postgresql/data"

  fmbackend:
    container_name: FM-django-prod
    build:
      context: ./FMBackend
      dockerfile: Dockerfile
    depends_on:
      - fm_db
    ports:
      - "8001:8001"
    env_file:
      - ./FMBackend/.env

  fm_db:
    container_name: fm_db
    image: postgres
    restart: unless-stopped
    env_file:
      - ./FMBackend/.env
    volumes:
      - "./FMBackend/db/postgres_data:/var/lib/postgresql/data"

  prometheus:
    image: prom/prometheus:v2.14.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:9090:9090"

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
  grafana:
    image: grafana/grafana:6.5.2
    ports:
      - "127.0.0.1:3060:3000"
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_JSON_ENABLED=true
